Method 01: Maximal Square


class Solution {
    int max=0;
    public int solve(char[][] matrix, int i, int j, int dp[][]){
        
        if(i>=matrix.length||j>=matrix[0].length){
            return 0;
        }

        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int bottom=solve(matrix, i+1, j, dp);
        int diagonal=solve(matrix, i+1, j+1, dp);
        int right=solve(matrix, i, j+1, dp);

        if(matrix[i][j]=='1'){
            dp[i][j]=Math.min(bottom, Math.min(right, diagonal))+1;
            max=Math.max(max, dp[i][j]);
            return dp[i][j];
        }
        else{
            return dp[i][j]=0;
        }
    }
    public int maximalSquare(char[][] matrix) {
        int dp[][]=new int[matrix.length][matrix[0].length];
        for(int i = 0; i <matrix.length; i++){
            for(int j = 0; j <matrix[0].length; j++){
                dp[i][j] = -1;
            }
          }
          solve(matrix,0,0, dp);
        return max*max;
    }
}
